# Generated by Django 5.1.2 on 2024-10-24 15:16

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nome")),
                (
                    "document",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        unique=True,
                        verbose_name="Documento",
                    ),
                ),
                (
                    "customer_type",
                    models.IntegerField(
                        choices=[(1, "Física"), (2, "Jurídica")],
                        default=1,
                        verbose_name="Tipo de Cliente",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Data de Nascimento"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=17,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="O número de telefone deve estar no formato: '+999999999'. Até 15 dígitos permitidos.",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                        verbose_name="Celular",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        unique=True,
                        verbose_name="E-mail",
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="Endereço"
                    ),
                ),
                (
                    "address_complement",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Complemento",
                    ),
                ),
                ("enabled", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
            ],
            options={
                "verbose_name": "Cliente",
                "verbose_name_plural": "Clientes",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Material",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "full_name",
                    models.CharField(max_length=200, verbose_name="Nome Completo"),
                ),
                ("nick_name", models.CharField(max_length=100, verbose_name="Apelido")),
                (
                    "ean_code",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Código EAN"
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="Descrição")),
                ("active", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
            ],
            options={
                "verbose_name": "Material",
                "verbose_name_plural": "Materiais",
                "ordering": ["full_name"],
            },
        ),
        migrations.CreateModel(
            name="Tax",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.CharField(max_length=100, verbose_name="Descrição"),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("tax", "Imposto"), ("fee", "Taxa")],
                        max_length=10,
                        verbose_name="Tipo",
                    ),
                ),
                ("acronym", models.CharField(max_length=10, verbose_name="Sigla")),
                (
                    "group",
                    models.CharField(
                        choices=[
                            ("federal", "Federal"),
                            ("state", "Estadual"),
                            ("municipal", "Municipal"),
                            ("other", "Outro"),
                        ],
                        max_length=20,
                        verbose_name="Grupo",
                    ),
                ),
                (
                    "calc_operator",
                    models.CharField(
                        choices=[
                            ("%", "Percentual"),
                            ("0", "Fixo"),
                            ("+", "Adição"),
                            ("-", "Subtração"),
                            ("*", "Multiplicação"),
                            ("/", "Divisão"),
                        ],
                        default="%",
                        max_length=1,
                    ),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=4, max_digits=10, verbose_name="Valor"
                    ),
                ),
                ("enabled", models.BooleanField(default=True, verbose_name="Ativo")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Taxa/Imposto",
                "verbose_name_plural": "Taxas e Impostos",
            },
        ),
        migrations.CreateModel(
            name="Budget",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("CREATED", "Criado"),
                            ("CANCELED", "Cancelado"),
                            ("PENDING", "Pendente Envio"),
                            ("SENT", "Enviado"),
                            ("ACCEPTED", "Aceito"),
                            ("SERVICE_ORDER", "Ordem de Serviço"),
                            ("SCHEDULED", "Agendado"),
                        ],
                        default="CREATED",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("enabled", models.BooleanField(default=True, verbose_name="Ativo")),
                ("installation_date", models.DateField(blank=True, null=True)),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Valor",
                    ),
                ),
                (
                    "tax_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Valor dos Impostos",
                    ),
                ),
                (
                    "value_total",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Valor Total",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="budget.customer",
                    ),
                ),
            ],
            options={
                "verbose_name": "Orçamento",
                "verbose_name_plural": "Orçamentos",
            },
        ),
        migrations.CreateModel(
            name="BudgetItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=7,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                ("enabled", models.BooleanField(default=True)),
                ("installation_date", models.DateField(blank=True, null=True)),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Valor Unitário",
                    ),
                ),
                (
                    "tax_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Valor dos Impostos Unitário",
                    ),
                ),
                (
                    "value_total",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Valor Total",
                    ),
                ),
                (
                    "budget",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="budget.budget",
                    ),
                ),
                (
                    "material",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="budget.material",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item do Orçamento",
                "verbose_name_plural": "Itens do Orçamento",
            },
        ),
        migrations.CreateModel(
            name="MaterialPrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "total_value",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Valor Total"
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Data de Início")),
                ("end_date", models.DateField(verbose_name="Data de Fim")),
                ("active", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "material",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prices",
                        to="budget.material",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Price_List",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "type_tax",
                    models.CharField(
                        choices=[("+", "Positive"), ("-", "Negative")],
                        default="+",
                        max_length=1,
                    ),
                ),
                (
                    "tax_value",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "value_total",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "material",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="budget.material",
                    ),
                ),
                (
                    "tax",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="budget.tax",
                    ),
                ),
            ],
            options={
                "verbose_name": "Lista de Preços",
                "verbose_name_plural": "Listas de Preços",
                "ordering": ["-start_date", "material__full_name"],
            },
        ),
    ]
